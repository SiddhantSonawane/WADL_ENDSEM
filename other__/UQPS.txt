W1 Create a simple Mobile Website using jQuery Mobile for our college Pune Instituteof
Computer Technology (PICT).


W3 Write a JavaScript Program to get the user registration data and push to array/local
storage and data list in the new page.

w-7 Design the following Responsive websites using HTML, CSS and
Bootstrap. (DONE)


w-8 Perform following tasks using nodejs, Expressjs and MongoDB. Following
operation should be performed in Nodejs and Expressjs only.
a) Create a Database called music
b) Create a collection called song details
c) Insert array of 5 song documents in above Collection. [Document should have
following field: Songname, Film, Music_director, singer]
d) Display total count of documents and List all the documents in the browser.
e) List specified Music Director songs.
f) List specified Music Director songs sung by specified Singer
g) Delete the song which you donâ€™t like.
h) Add a new song which is your favorite.
i) List Songs sung by Specified Singer from specified films.
j) Update the document by adding Actor and Actress name.
k) Display the above data in Browser in tabular format. 

W13 Create two input boxes and one button. In Input box you can provide input like
3#3#3 and 3#3#2 (DONE)

W14. Use the Bootstrap grids classes to create this webpage with a sidebar and main
content:


W17 W17. Create your own webpage using HTML, CSS and Bootstrap called "index.html". It
should have:
a. A title
b. Three or more types of headings
c. Some paragraphs
d. One or more ordered lists
e. One or more unordered lists
f. One or more tables
g. Some line-breaks
h. Some horizontal lines
i. Some comments
j. Various text styles: bold, italic, strike-through, underline
Make sure that the file is reasonably large: 2-3 screens worth at least. (You can add
dummy content if you wish).
2. View the above HTML file on a browser, using a URL such as:
http://localhost/index.html OR double click on html file.
3. Learn to look at the HTML source from the browser window.
4. Now create some internal bookmarks and links using the "name=xyz" property and
"href=#xyz". Type the URLs for these internal bookmarks directly onto the browser.
5. Now split your webpage into multiple HTML files, or equivalently create more HTML
files. For example, you may have a separate HTML file describing your interests or
educational background. Provide links from the main index.html to these other HTML
files. Provide also some links to external websites (e.g. google).
6. Now move all the HTML files to another directory. Your links should still work (they
should be relative links).
7. Embed one or more images in any of the HTML files. The images should reside
within a sub-directory called "images".
8. Now include some styles within HTML tag elements. For example: table border, cell
background, link color, text color, background color, list style, text font, etc.
9. Now include some of the earlier styles in the "style" tag of the HTML "head" section,
instead of marking the styles in individual HTML tag elements.
10. Now have a separate css file for the above styles, so that the same can be
included in multiple HTML files.
11. Insert some special characters such as &, <, >, etc. in your HTML file.



W20. Create Following form and Facebook webpage:

W24. Create a Node.JS Application which serves a static website for applications like
Art Gallery (pinterest) or restaurant or any other application.


W25. Create an Angular application for Course Enrollment System where the process
begins with Registration of User followed by User Login. Once the process is done User
Data is displayed on Profile Component